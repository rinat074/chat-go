syntax = "proto3";

package chat;
option go_package = "github.com/rinat074/chat-go/proto/chat";

import "google/protobuf/timestamp.proto";

service ChatService {
  rpc SaveMessage(Message) returns (Message) {}
  rpc GetPublicMessages(GetMessagesRequest) returns (MessagesResponse) {}
  rpc GetPrivateMessages(GetPrivateMessagesRequest) returns (MessagesResponse) {}
  rpc GetGroupMessages(GetGroupMessagesRequest) returns (MessagesResponse) {}
  rpc CreateGroup(CreateGroupRequest) returns (Group) {}
  rpc AddUserToGroup(AddUserToGroupRequest) returns (AddUserToGroupResponse) {}
}

enum MessageType {
  PUBLIC = 0;
  PRIVATE = 1;
  GROUP = 2;
}

message Message {
  int64 id = 1;
  MessageType type = 2;
  string content = 3;
  int64 user_id = 4;
  string username = 5;
  optional int64 receiver_id = 6;
  optional int64 group_id = 7;
  google.protobuf.Timestamp created_at = 8;
}

message GetMessagesRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message GetPrivateMessagesRequest {
  int64 user_id = 1;
  int64 other_user_id = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message GetGroupMessagesRequest {
  int64 group_id = 1;
  int64 user_id = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message MessagesResponse {
  repeated Message messages = 1;
}

message Group {
  int64 id = 1;
  string name = 2;
  string description = 3;
  int64 owner_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateGroupRequest {
  string name = 1;
  string description = 2;
  int64 owner_id = 3;
}

message AddUserToGroupRequest {
  int64 group_id = 1;
  int64 user_id = 2;
  int64 admin_id = 3;
}

message AddUserToGroupResponse {
  bool success = 1;
} 