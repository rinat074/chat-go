version: '3.8'

services:
  # Сервис миграций
  migrate:
    image: migrate/migrate
    volumes:
      - ./db/migrations:/migrations
    depends_on:
      - postgres
    command: ["-path", "/migrations", "-database", "postgres://postgres:postgres@postgres:5432/chatapp?sslmode=disable", "up"]
    restart: on-failure

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/chatapp
      - GRPC_SERVER_ADDRESS=:50051
      - JWT_SECRET=your-secret-key
    depends_on:
      - postgres
      - migrate
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50051"]
      interval: 30s
      timeout: 10s
      retries: 3

  chat-service:
    build:
      context: .
      dockerfile: services/chat-service/Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/chatapp
      - REDIS_URL=redis:6379
      - GRPC_SERVER_ADDRESS=:50052
    depends_on:
      - postgres
      - redis
      - migrate
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50052"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway-service:
    build:
      context: .
      dockerfile: services/gateway-service/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - HTTP_SERVER_ADDRESS=:8080
      - AUTH_SERVICE_ADDRESS=auth-service:50051
      - CHAT_SERVICE_ADDRESS=chat-service:50052
      - REDIS_URL=redis:6379
      - RATE_LIMIT_DURATION=1m
    depends_on:
      - auth-service
      - chat-service
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chatapp
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data: 